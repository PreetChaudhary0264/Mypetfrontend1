{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\FindMyPet\\\\mypet-frontend\\\\src\\\\components\\\\PetRegistration\\\\QRGenerator.js\";\nimport React from 'react';\nimport { QRCodeSVG } from 'qrcode.react'; // Changed import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRGenerator = ({\n  petId\n}) => {\n  const qrValue = `https://mypet.com/pet/${petId}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-code\",\n    children: [/*#__PURE__*/_jsxDEV(QRCodeSVG, {\n      value: qrValue,\n      size: 200,\n      fgColor: \"#4b9cd3\" // Matches your theme\n      ,\n      level: \"H\" // High error correction\n      ,\n      includeMargin: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-download\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const svg = document.querySelector(\"svg\");\n          const svgData = new XMLSerializer().serializeToString(svg);\n          const canvas = document.createElement(\"canvas\");\n          const ctx = canvas.getContext(\"2d\");\n          const img = new Image();\n          img.onload = () => {\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0);\n            const pngFile = canvas.toDataURL(\"image/png\");\n            const downloadLink = document.createElement(\"a\");\n            downloadLink.href = pngFile;\n            downloadLink.download = `mypet-qr-${petId}.png`;\n            downloadLink.click();\n          };\n          img.src = \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svgData)));\n        },\n        children: \"Download QR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = QRGenerator;\nexport default QRGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRGenerator\");","map":{"version":3,"names":["React","QRCodeSVG","jsxDEV","_jsxDEV","QRGenerator","petId","qrValue","className","children","value","size","fgColor","level","includeMargin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","svg","document","querySelector","svgData","XMLSerializer","serializeToString","canvas","createElement","ctx","getContext","img","Image","onload","width","height","drawImage","pngFile","toDataURL","downloadLink","href","download","click","src","btoa","unescape","encodeURIComponent","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/FindMyPet/mypet-frontend/src/components/PetRegistration/QRGenerator.js"],"sourcesContent":["import React from 'react';\r\nimport { QRCodeSVG } from 'qrcode.react'; // Changed import\r\n\r\nconst QRGenerator = ({ petId }) => {\r\n  const qrValue = `https://mypet.com/pet/${petId}`;\r\n\r\n  return (\r\n    <div className=\"qr-code\">\r\n      <QRCodeSVG \r\n        value={qrValue} \r\n        size={200}\r\n        fgColor=\"#4b9cd3\"  // Matches your theme\r\n        level=\"H\"          // High error correction\r\n        includeMargin={true}\r\n      />\r\n      <div className=\"qr-download\">\r\n        <button onClick={() => {\r\n          const svg = document.querySelector(\"svg\");\r\n          const svgData = new XMLSerializer().serializeToString(svg);\r\n          const canvas = document.createElement(\"canvas\");\r\n          const ctx = canvas.getContext(\"2d\");\r\n          const img = new Image();\r\n          \r\n          img.onload = () => {\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            ctx.drawImage(img, 0, 0);\r\n            const pngFile = canvas.toDataURL(\"image/png\");\r\n            const downloadLink = document.createElement(\"a\");\r\n            downloadLink.href = pngFile;\r\n            downloadLink.download = `mypet-qr-${petId}.png`;\r\n            downloadLink.click();\r\n          };\r\n          \r\n          img.src = \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svgData)));\r\n        }}>\r\n          Download QR\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRGenerator;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACjC,MAAMC,OAAO,GAAG,yBAAyBD,KAAK,EAAE;EAEhD,oBACEF,OAAA;IAAKI,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBL,OAAA,CAACF,SAAS;MACRQ,KAAK,EAAEH,OAAQ;MACfI,IAAI,EAAE,GAAI;MACVC,OAAO,EAAC,SAAS,CAAE;MAAA;MACnBC,KAAK,EAAC,GAAG,CAAU;MAAA;MACnBC,aAAa,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACFd,OAAA;MAAKI,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BL,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAM;UACrB,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACzC,MAAMC,OAAO,GAAG,IAAIC,aAAa,CAAC,CAAC,CAACC,iBAAiB,CAACL,GAAG,CAAC;UAC1D,MAAMM,MAAM,GAAGL,QAAQ,CAACM,aAAa,CAAC,QAAQ,CAAC;UAC/C,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;UACnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;UAEvBD,GAAG,CAACE,MAAM,GAAG,MAAM;YACjBN,MAAM,CAACO,KAAK,GAAGH,GAAG,CAACG,KAAK;YACxBP,MAAM,CAACQ,MAAM,GAAGJ,GAAG,CAACI,MAAM;YAC1BN,GAAG,CAACO,SAAS,CAACL,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACxB,MAAMM,OAAO,GAAGV,MAAM,CAACW,SAAS,CAAC,WAAW,CAAC;YAC7C,MAAMC,YAAY,GAAGjB,QAAQ,CAACM,aAAa,CAAC,GAAG,CAAC;YAChDW,YAAY,CAACC,IAAI,GAAGH,OAAO;YAC3BE,YAAY,CAACE,QAAQ,GAAG,YAAYlC,KAAK,MAAM;YAC/CgC,YAAY,CAACG,KAAK,CAAC,CAAC;UACtB,CAAC;UAEDX,GAAG,CAACY,GAAG,GAAG,4BAA4B,GAAGC,IAAI,CAACC,QAAQ,CAACC,kBAAkB,CAACtB,OAAO,CAAC,CAAC,CAAC;QACtF,CAAE;QAAAd,QAAA,EAAC;MAEH;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC4B,EAAA,GAtCIzC,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}